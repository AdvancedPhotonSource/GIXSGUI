function sumimggui
% ***********************************************
% Copyright (c) 2020 UChicago Argonne, LLC
% See LICENSE file.
% ***********************************************
%
% SUMIMG Sum or average images.
%
%   Require imwrite2tif.m

%   Zhang Jiang @8ID/APS/ANL
%   $Revision: 1.0.0 $  $Date: 2011/03/22 $
%   $Revision: 1.0.1 $  $Date: 2011/12/09 $ Use sum image as default.
%   %Revision: 1.0.2 $  $Date: 2012/06/26 $ Disable tag reading (imfinfo).
%   %Revision: 1.0.3 $  $Date: 2016/06/20 $ 
%       1) clear previous summed image when successfully load new files
%       2) add default export file name ('summed_xxx') when exporting. 
%       3) give message when exporting is successful
%       4) add number of images into file name $2017/08/18$


hFigSumImg = findall(0,'Tag','sumimg_fig');
if ~isempty(hFigSumImg)
    figure(hFigSumImg);
    return;
end

%% figure layout
screenSize = get(0,'screensize');
figSize = [380,420];
figPos = [(screenSize(3)-figSize(1))/2, (screenSize(4)-figSize(2))/2, figSize];
hFigSumImg = figure(...
    'DockControls','off',...
    'Resize','off',...
	'position',figPos,...
    'PaperOrient','portrait',...
    'PaperPositionMode','auto',...
    'IntegerHandle','off',...
    'NumberTitle','off',...
    'MenuBar','none',...
    'HandleVisibility','callback',...
    'Toolbar','none',...
    'Name','Sum/Average Image - 1.0 (8ID/APS/ANL)',...
    'Tag','sumimg_fig');
backgroundcolor = get(hFigSumImg,'color');
uicontrol('Parent',hFigSumImg,...
    'style','Edit',...
    'Units','pixel',...
    'backgroundcolor','w',...
    'String','',...
    'Max',2,...
    'Min',0,...
    'HorizontalAlignment','left',...
    'Enable','inactive',...
    'Position',[5,80,figSize(1)-10,figSize(2)-85],...
    'Tag','sumimg_msg');
uicontrol('Parent',hFigSumImg,...
    'style','Popupmenu',...
    'Units','pixel',...
    'backgroundcolor','w',...
    'String',{'Sum image';'Average image'},...
    'value',1,...
    'HorizontalAlignment','left',...
    'Enable','on',...
    'Position',[5,55,120,20],...
    'Tag','sumimg_PopupmenuType',...
    'callback',@sumimg_PopupmenuType);
uicontrol('Parent',hFigSumImg,...
    'style','pushbutton',...
    'String','Import Images ...',...
    'unit','pixel',...
    'Position',[5,30,120,20],...
    'Tag','sumimg_PushbuttonLoadPath',...
    'callback',@sumimg_PushbuttonImportImages);
uicontrol('Parent',hFigSumImg,...
    'style','pushbutton',...
    'String','Start',...
    'unit','pixel',...
    'Position',[130,30,120,45],...
    'Tag','sumimg_PushbuttonStart',...
    'callback',@sumimg_PushbuttonStart);
uicontrol('Parent',hFigSumImg,...
    'style','Text',...
    'Units','pixel',...
    'backgroundcolor',backgroundcolor,...
    'String','Data type ',...
    'HorizontalAlignment','left',...
    'Position',[255,55,60,15]);
uicontrol('Parent',hFigSumImg,...
    'style','Popupmenu',...
    'Units','pixel',...
    'backgroundcolor','w',...
    'String',{'logical','uint8','int8','uint16','int16','uint32','int32','single','uint64','int64','double'},...
    'value',7,...
    'HorizontalAlignment','left',...
    'Enable','on',...
    'Position',[315,55,60,20],...
    'Tag','sumimg_PopupmenuBit',...
    'callback',@sumimg_PopupmenuBit);
uicontrol('Parent',hFigSumImg,...
    'style','pushbutton',...
    'String','Export',...
    'unit','pixel',...
    'Position',[255,30,120,20],...
    'Tag','sumimg_PushbuttonExport',...
    'callback',@sumimg_PushbuttonExport);

uicontrol('Parent',hFigSumImg,...
    'style','pushbutton',...
    'String','Close',...
    'unit','pixel',...
    'Position',[5,5,100,20],...
    'Tag','sumimg_PushbuttonClose',...
    'callback','delete(gcbf)');
uicontrol('Parent',hFigSumImg,...
    'style','pushbutton',...
    'String','Reset to Default',...
    'unit','pixel',...
    'Position',[110,5,100,20],...
    'Tag','sumimg_PushbuttonReset',...
    'callback',@sumimg_PushbuttonReset);

% reset or initialize
feval(get(findall(hFigSumImg,'tag','sumimg_PushbuttonReset'),'callback'));

function sumimg_PopupmenuType(~,~)
hFigSumImg = gcbf;
udata = get(hFigSumImg,'UserData');
hPopumenuType = findall(hFigSumImg,'tag','sumimg_PopupmenuType');
udata.type = get(hPopumenuType,'value');
set(hFigSumImg,'UserData',udata);
if udata.type == 1
    info_added = {['Images will be summed.'];...
    ' '};
else
    info_added = {['Images will be averaged.'];...
    ' '};
end
updateinfo(hFigSumImg,info_added);

function sumimg_PushbuttonImportImages(~,~)
hFigSumImg = gcbf;
udata = get(hFigSumImg,'UserData');
oldpath = pwd;
if ~isempty(udata.path), cd(udata.path); end
[filename,pathname] = uigetfile({'*.tif','TIF Image (*.tif)';'*.tiff','TIFF Image (*.tiff)';'*.cbf','Crystallographic Binary File (*.cbf)'},'Import Image Files','MultiSelect','on');
cd(oldpath);
if isequal(filename,0), return; end
udata.path = pathname;
if iscell(filename)
    udata.flist = filename';
else
    udata.flist = {filename};
end
udata.img = [];         % added to remove previouis udata.img if successfully load file names.
set(hFigSumImg,'UserData',udata);
info_added = {};
info_added = [info_added;num2str(length(udata.flist)), ' image(s) is/are added from ',udata.path,':'];
info_added = [info_added;udata.flist];
info_added = [info_added;' '];
updateinfo(hFigSumImg,info_added);


function sumimg_PushbuttonStart(~,~)
hFigSumImg = gcbf;
udata = get(hFigSumImg,'UserData');
flist = udata.flist;
if isempty(flist), return; end
imgsize = [];
updateinfo(hFigSumImg,' ');        
for ii=1:length(flist)
    pause(0.05);
    f = fullfile(udata.path,flist{ii});
    updateinfo(hFigSumImg,['Loading ',num2str(ii),' of ',num2str(length(flist)),' images: ',flist{ii}]);       
    img_tmp = sumimg_loadimage(f);    
    if ii==1, imgsize = size(img_tmp); img = zeros(imgsize); end
    if ~isequal(imgsize,size(img_tmp))
        updateinfo(hFigSumImg,'Error! Image dimension does not match.');        
        return;
    end    
    img = img_tmp+img;
end
if udata.type == 2
    img = img/length(flist);
end
udata.img = img;
set(hFigSumImg,'UserData',udata);
info_added = {[num2str(length(flist)), ' image have been processed successfully.'];};
updateinfo(hFigSumImg,info_added);

function im=sumimg_loadimage(f)
%msg = 'MATLAB:tifftagsread:unknownTagPayloadState';
%s = warning('query',msg);
%warning('off',msg);
[~,~,ext] = fileparts(f);
if strcmpi(ext,'.tif') || strcmpi(ext,'.tiff')
    im = double(imread(f));
%    info = imfinfo(f);
elseif strcmpi(ext,'.cbf')
    tmp = cbfread(f);
    im = double(tmp.data');
%    info = tmp.header;
else
    error('Invalid image type.');
end
%warning(s.state,msg);

function sumimg_PopupmenuBit(~,~)
hFigSumImg = gcbf;
udata = get(hFigSumImg,'UserData');
hPopumenuBit = findall(hFigSumImg,'tag','sumimg_PopupmenuBit');
datatype = get(hPopumenuBit,'string');
udata.bit = datatype{get(hPopumenuBit,'value')};
set(hFigSumImg,'UserData',udata);
info_added = {['Export image data type is ',udata.bit];...
    ' '};
updateinfo(hFigSumImg,info_added);

function sumimg_PushbuttonExport(~,~)
hFigSumImg = gcbf;
udata = get(hFigSumImg,'UserData');
if isempty(udata.img), return; end
uiputfile_str = {...
    '*.tif','TIFF files (*.tif)'};
nfile = length(udata.flist);    % number of files to sum or average
if udata.type == 1
    default_export_filename = ['summed_n',num2str(nfile),'__',udata.flist{1}];
elseif udata.type == 2
    default_export_filename = ['averaged_n',num2str(nfile),'__',udata.flist{1}];
end
[filename,pathname] = uiputfile(uiputfile_str,'Export Summed or Averaged Image As',...
    fullfile(udata.path,default_export_filename));
if isequal(filename,0), return; end
f = fullfile(pathname,filename);
imwrite2tif(udata.img,[],f,udata.bit);
info_added = {
    'Exported summed/averaged image to:';...
    pathname;
    filename;
    ' '};
updateinfo(hFigSumImg,info_added);

function sumimg_PushbuttonReset(~,~)
hFigSumImg = findall(0,'Tag','sumimg_fig');
udata = get(hFigSumImg,'UserData');
udata.type = 1;         % [1]/2: [sum]/average
udata.path = '';
udata.flist = {};
udata.bit = 'int32';
udata.img = [];
set(hFigSumImg,'UserData',udata);
hEdit = findall(hFigSumImg,'tag','sumimg_msg');
info = {'Sum or average images. Instruction:';...
    '1. Choose sum or average. Default: sum';...    
    '2. Select images. Only TIF/TIFF and CBF formats are supported.';...
    '3. Start.';...
    '4. Select export image data type. Default: int32';...
    '5. Export image. Only TIF/TIFF format is supported.'};
set(hEdit,'String',info);
set(findall(hFigSumImg,'tag','sumimg_PopupmenuType'),'value',1);
set(findall(hFigSumImg,'tag','sumimg_PopupmenuBit'),'value',7)

function updateinfo(hFigSumImg,info_added)
hEdit = findall(hFigSumImg,'tag','sumimg_msg');
info = get(hEdit,'String');
info = [info_added; info];
set(hEdit,'String',info);