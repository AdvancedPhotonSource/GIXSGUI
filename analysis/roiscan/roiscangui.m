function roiscangui
% ***********************************************
% Copyright (c) 2020 UChicago Argonne, LLC
% See LICENSE file.
% ***********************************************
%
% ROISCANGUI GUI to reduce scan data of pesudo counter (ROI) on area detector.
%
%   Zhang Jiang @8ID/APS/ANL
%   $Revision: 1.0 $  $Date: 2013/01/24 $

hFigROIScan = findall(0,'Tag','roiscan_fig');
if ~isempty(hFigROIScan)
    figure(hFigROIScan);
    return;
end

%% initialize udata field
udata.constraint =  [...
    1,12,NaN, NaN; ...
    1,12,NaN, NaN;...
    1,12,NaN, NaN;...
    1,12,NaN, NaN;];
udata.dataFlag = 2; %1/2: use MaskedData or Solidanglecorreted data
udata.plotFlag = 1; % 1/0 plot during ROI scan?
udata.plotX = 1;    % 1 for scan variable; 2-13 for other qmaps
udata.cmaskDisplayFlag= 1; % 1/0 display cmark?
udata.params = gixsdata;
udata.imFilePath = pwd;
udata.imFileName = {};
udata.scanVarName = 'UserDefined';
udata.scanVarList = [];
udata.roiScanOutput = '';

%% figure layout
screenSize = get(0,'screensize');
figureSize = [440,620];
figPos = [(screenSize(3)-figureSize(1))/2, (screenSize(4)-figureSize(2))/2, figureSize];
hFigROIScan = figure(...
    'DockControls','off',...
    'Resize','off',...
    'position',figPos,...
    'PaperOrient','portrait',...
    'PaperPositionMode','auto',...
    'IntegerHandle','off',...
    'NumberTitle','off',...
    'MenuBar','none',...
    'HandleVisibility','on',...
    'Toolbar','none',...
    'Name','ROI Scan - 1.0 (8ID/APS/ANL)',...
    'Tag','roiscan_fig','UserData',udata);
backgroundcolor = get(hFigROIScan,'color');
panelcolor = backgroundcolor;
hPanelROIScan = uipanel('Parent',hFigROIScan,...
    'BackgroundColor',panelcolor,...
    'units','norm',...
    'Position',[0.005 0.045 0.99 0.955],...
    'Title','Extract ROI Scan',...
    'TitlePosition','centertop',...
    'tag','roiscan_PanelROI');
SizePanelROIScan = get(hPanelROIScan,'position'); SizePanelROIScan = SizePanelROIScan(3:4).*figureSize;

% ROI constraints
PosROI = [5,SizePanelROIScan(2)-35,100,15];
uicontrol('Parent',hPanelROIScan,...
    'style','Text',...
    'Units','pixel',...
    'backgroundcolor',panelcolor,...
    'String','Define ROI using constraints: ',...
    'HorizontalAlignment','left',...
    'Position',[5,PosROI(2),200,15]);
% contraints
roiscan_listbox_str = {...
    'q';'phi';...
    'qz (for reflection only)';'qx (for reflection only)';'qy (for reflection only)';'qr (for reflection only)';...
    '2Theta (for reflection only)';'Alphaf (for reflection only)';'Chi (for reflection only)';...
    'x pixel';'y pixel';...
    'none'};
for ii=1:4
    uicontrol('Parent',hPanelROIScan,...
        'style','Text',...
        'Units','pixel',...
        'backgroundcolor',panelcolor,...
        'String',['Constraint #',num2str(ii),' '],...
        'HorizontalAlignment','right',...
        'Position',[SizePanelROIScan(1)-105*4,PosROI(2)-ii*25,100,15]);
    uicontrol('Parent',hPanelROIScan,...
        'Style','Popupmenu',...
        'unit','pixel',...
        'Position',[SizePanelROIScan(1)-105*3,PosROI(2)-ii*25,50,20],...
        'backgroundcolor','w',...
        'String',{'AND';'OR'},...
        'Tooltipstring','Constraint is applied in order from #1 to #4 to current mask',...
        'value',1,...
        'Enable','on',...
        'Tag',['roiscan_PopupmenuLinecutConstraintOperator',num2str(ii)],...
        'callback',@updateFcn);
    uicontrol('Parent',hPanelROIScan,...
        'style','Edit',...
        'Units','pixel',...
        'backgroundcolor','w',...
        'String','NaN',...
        'HorizontalAlignment','left',...
        'Enable','on',...
        'Position',[SizePanelROIScan(1)-250,PosROI(2)-ii*25,50,20],...
        'Tag',['roiscan_EditLinecutConstraintLower',num2str(ii)],...
        'callback',@updateFcn);
    uicontrol('Parent',hPanelROIScan,...
        'style','Text',...
        'Units','pixel',...
        'backgroundcolor',panelcolor,...
        'String','<=',...
        'HorizontalAlignment','center',...
        'Position',[SizePanelROIScan(1)-200,PosROI(2)-ii*25,20,15]);
    uicontrol('Parent',hPanelROIScan,...
        'Style','Popupmenu',...
        'unit','pixel',...
        'Position',[SizePanelROIScan(1)-180,PosROI(2)-ii*25,105,20],...
        'backgroundcolor','w',...
        'String',roiscan_listbox_str,...
        'value',12,...
        'Enable','on',...
        'Tag',['roiscan_PopupmenuLinecutConstraint',num2str(ii)],...
        'callback',@updateFcn);
    uicontrol('Parent',hPanelROIScan,...
        'style','Text',...
        'Units','pixel',...
        'backgroundcolor',panelcolor,...
        'String','<=',...
        'HorizontalAlignment','center',...
        'Position',[SizePanelROIScan(1)-75,PosROI(2)-ii*25,20,15]);
    uicontrol('Parent',hPanelROIScan,...
        'style','Edit',...
        'Units','pixel',...
        'backgroundcolor','w',...
        'String','NaN',...
        'HorizontalAlignment','left',...
        'Enable','on',...
        'Position',[SizePanelROIScan(1)-55,PosROI(2)-ii*25,50,20],...
        'Tag',['roiscan_EditLinecutConstraintUpper',num2str(ii)],...
        'callback',@updateFcn);
end
%  set(findall(hFigROIScan,'tag','roiscan_EditLinecutConstraintLower1'),'string','1');
%  set(findall(hFigROIScan,'tag','roiscan_PopupmenuLinecutConstraint1'),'value',1);
%  set(findall(hFigROIScan,'tag','roiscan_EditLinecutConstraintUpper1'),'string','100');

% get params
PosParams = [5,SizePanelROIScan(2)-160,100,15];
uicontrol('Parent',hPanelROIScan,...
    'style','Text',...
    'Units','pixel',...
    'backgroundcolor',panelcolor,...
    'String','Load parameters: ',...
    'HorizontalAlignment','left',...
    'Position',[5,PosParams(2),100,15]);
uicontrol('Parent',hPanelROIScan,'style','Text','Units','pixel',...
    'String','Empty parameters',...
    'backgroundcolor',panelcolor,...
    'TooltipString','Use buttons below to load parameter file or dupilcate from GIXSGUI default',...
    'HorizontalAlignment','left',...
    'Position',[120,PosParams(2),SizePanelROIScan(1)-125,15],...
    'Tag','roiscan_TextParam');
uicontrol('Parent',hPanelROIScan,...
    'style','pushbutton',...
    'String','Param File ...',...
    'unit','pixel',...
    'Position',[SizePanelROIScan(1)-105*4,PosParams(2)-25,100,20],...
    'Tag','roiscan_PushbuttonParamFromFile',...
    'TooltipString','Load parameter file',...
    'callback',@roiscan_PushbuttonLoadParamsFcn);
uicontrol('Parent',hPanelROIScan,...
    'style','pushbutton',...
    'String','GIXSGUI Default',...
    'unit','pixel',...
    'Position',[SizePanelROIScan(1)-105*3,PosParams(2)-25,100,20],...
    'Tag','roiscan_PushbuttonParamFromDefault',...
    'TooltipString','Use current GIXSGUI default parameters',...
    'callback',@roiscan_PushbuttonLoadParamsFcn);

% image files and scanning variables
PosList = [5,SizePanelROIScan(2)-210,100,15];
% uicontrol('Parent',hPanelROIScan,...
%     'style','pushbutton',...
%     'String','Select Images ...',...
%     'unit','pixel',...
%     'Position',[100,PosList(2)-25,120,20],...
%     'Tag','roiscan_PushbuttonSelectImageFiles',...
%     'TooltipString','Select Image Files (must be in a single folder)',...
%     'callback',@roiscan_PushbuttonSelectImageFilesFcn);
uicontrol('Parent',hPanelROIScan,...
    'style','Text',...
    'Units','pixel',...
    'backgroundcolor',panelcolor,...
    'String','Load image file names and scan variables: ',...
    'HorizontalAlignment','left',...
    'Position',[5,PosList(2),300,15]);
% ROi table (constraint)
colName = {'File Name','UserDefined'};
nRows = 15;
rowName = {1:nRows};
roidata = cell(nRows,2);
roidata(:,1) = {''};
roidata(:,2) = {[]};
hcmenu = uicontextmenu;
uimenu(hcmenu, 'Label', 'Select Image Files', 'Callback', @roiscan_CMenuSelectImageFiles,'tag','roiscan_CMenuSelectImageFiles');
uimenu(hcmenu, 'Label', 'Scan Var: User Defined',  'Separator','on', 'Callback', @roiscan_CMenuScanVar,'tag','roiscan_CMenuScanVarUserDefined');
uimenu(hcmenu, 'Label', 'Scan Var: IncidentAngle', 'Callback', @roiscan_CMenuScanVar,'tag','roiscan_CMenuScanVarIncidentAngle');
uimenu(hcmenu, 'Label', 'Copy', 'Separator','on', 'Callback', @roiscan_CMenuCBKCopyPasteDelete,'tag','roiscan_CMenuCopy');
uimenu(hcmenu, 'Label', 'Paste', 'Callback', @roiscan_CMenuCBKCopyPasteDelete,'tag','roiscan_CMenuPaste');
uimenu(hcmenu, 'Label', 'Delete', 'Callback', @roiscan_CMenuCBKCopyPasteDelete,'tag','roiscan_CMenuDelete');
hTableList = uitable('Parent',hPanelROIScan ,...
    'unit','pixel',...
    'Position',[1,PosList(2)-300,SizePanelROIScan(1)-3,295],...
    'Tag','roiscan_TableList',...
    'UIContextMenu',hcmenu,...
    'UserData',[]);         % userdata for selected cell indices
set(hTableList, 'ColumnName', colName,...
    'RowName',rowName,...
    'columnformat',[{'char'},repmat({'numeric'},[1,1])],...
    'ColumnWidth', [250,repmat({130},[1,length(colName)-1])],...
    'ColumnEditable', true(1,length(colName)),...
    'Data',roidata,...
    'CellEditCallBack',@roiscan_TableList_CellEditCallback,...
    'CellSelectionCallback',@roiscan_TableList_CellSelectionCallback,...
    'TooltipString','Right click to load image file names and scan variables.');
set(hFigROIScan,'HandleVisibility','callback');         % after adding uimenu, set main figure handlvisibility backto callback

% plot settings
PosPlot = [5,SizePanelROIScan(2)-535,100,20];
uicontrol('Parent',hPanelROIScan,...
    'style','text',...
    'backgroundcolor',panelcolor,...
    'HorizontalAlignment','right',...    
    'String','Display during scan? ',...
    'unit','pixel',...
    'Position',[SizePanelROIScan(1)-105*4-10,PosPlot(2),110,15]);
uicontrol('Parent',hPanelROIScan,...
	'Style','Popupmenu',...
    'unit','pixel',...
    'Position',[SizePanelROIScan(1)-105*3,PosPlot(2),100,20],...
    'backgroundcolor','w',...
    'String',{'Yes';'No'},...
    'value',1,...
    'Enable','on',...
    'Tag','roiscan_PopupmenuPlotDuringScan',...
    'callback',@updateFcn);    
uicontrol('Parent',hPanelROIScan,...
    'style','text',...
    'backgroundcolor',panelcolor,...
    'HorizontalAlignment','right',...    
    'String','Display ROI? ',...
    'unit','pixel',...
    'Position',[SizePanelROIScan(1)-105*4,PosPlot(2)-25,100,15]);
uicontrol('Parent',hPanelROIScan,...
    'Style','Popupmenu',...
    'unit','pixel',...
    'Position',[SizePanelROIScan(1)-105*3,PosPlot(2)-25,100,20],...
    'backgroundcolor','w',...
    'String',{'Yes';'No'},...
    'value',1,...
    'Enable','on',...
    'Tag','roiscan_PopupmenuDisplayROI',...
    'ToolTipString','For better result, installation of Image Processing Toolbox is suggested',...
    'callback',@updateFcn);  
uicontrol('Parent',hPanelROIScan,...
    'style','text',...
    'backgroundcolor',panelcolor,...
    'HorizontalAlignment','right',...    
    'String','Plot axis ',...
    'unit','pixel',...
    'Position',[SizePanelROIScan(1)-105*4,PosPlot(2)-50,100,15]);
plot_list_str = {'scan variable';
    'q';'phi';...
    'qz (for reflection only)';'qx (for reflection only)';'qy (for reflection only)';'qr (for reflection only)';...
    '2Theta (for reflection only)';'Alphaf (for reflection only)';'Chi (for reflection only)';...
    'x pixel';'y pixel';};
uicontrol('Parent',hPanelROIScan,...
	'Style','Popupmenu',...
    'unit','pixel',...
    'Position',[SizePanelROIScan(1)-105*3,PosPlot(2)-50,100,20],...
    'backgroundcolor','w',...
    'String',plot_list_str,...
    'value',1,...
    'Enable','on',...
    'Tag','roiscan_PopupmenuPlotX',...
    'callback',@updateFcn);  

% start 
uicontrol('Parent',hPanelROIScan,...
    'style','pushbutton',...
    'String','Start ROI Scan ...',...
    'unit','pixel',...
    'Position',[SizePanelROIScan(1)-105*2,PosPlot(2),205,20],...
    'Tag','roiscan_PushbuttonStart',...
    'callback',@roiscan_PushbuttonStartFcn);

% output and plot result
uicontrol('Parent',hPanelROIScan,...
    'style','pushbutton',...
    'String','Plot Scan',...
    'unit','pixel',...
    'Position',[SizePanelROIScan(1)-105*2,PosPlot(2)-50,100,20],...
    'ToolTipString','Plot line scan data against scan variable',...
    'Tag','roiscan_PushbuttonPlotScan',...
    'callback',@roiscan_PushbuttonPlotScanFcn);
uicontrol('Parent',hPanelROIScan,...
    'style','pushbutton',...
    'String','Copy to WS',...
    'unit','pixel',...
    'Position',[SizePanelROIScan(1)-105,PosPlot(2)-25,100,20],...
    'Tag','roiscan_PushbuttonCopy2WS',...
    'ToolTipString','Copy ROI scan result to Matlab workspace',...
    'callback',@roiscan_PushbuttonCopy2WSFcn);
uicontrol('Parent',hPanelROIScan,...
    'style','pushbutton',...
    'String','Export to File ...',...
    'unit','pixel',...
    'Position',[SizePanelROIScan(1)-105,PosPlot(2)-50,100,20],...
    'ToolTipString','Export ROI scan result to .dat/txt ASCII file or .mat file with settings',...
    'Tag','roiscan_PushbuttonExport2File',...
    'callback',@roiscan_PushbuttonExport2FileFcn);

% --- Quit/Hide Figure
uicontrol('Parent',hFigROIScan,...
    'style','pushbutton',...
    'String','Quit',...
    'unit','pixel',...
    'Position',[5,5,70,20],...
    'Tag','roiscan_PushbuttonQuit',...
    'callback',@roiscan_CloseRequestFcn);
uicontrol('Parent',hFigROIScan,...
    'style','pushbutton',...
    'String','Close All',...
    'unit','pixel',...
    'ToolTipString','Close all figures',...
    'Position',[80,5,70,20],...
    'Tag','roiscan_PushbuttonCloseAll',...
    'callback',@roiscan_PushbuttonCloseAllFcn);


function roiscan_CloseRequestFcn(~,~)
delete(gcbf);

function roiscan_PushbuttonCloseAllFcn(~,~)
delete(findall(0,'tag','roiscan_plottedfigures'));

function roiscan_PushbuttonPlotScanFcn(~,~)
hFigROIScan = findall(0,'Tag','roiscan_fig');
udata = get(hFigROIScan,'UserData');
if isempty(udata.roiScanOutput), return; end
figure('tag','roiscan_plottedfigures');
if udata.plotX == 1
    if nnz(isnan( udata.roiScanOutput.scanVarList))~=0  % if NaN value exists in scanVarList
        plot(udata.roiScanOutput.scanResult.I,'bo-');
        ylabel('Intensity');
    else
        plot(...
            udata.roiScanOutput.scanVarList,...
            udata.roiScanOutput.scanResult.I,...
            'bo-');
        xlabel(udata.roiScanOutput.scanVarName);
    end
else
     if udata.params.Geometry == 1
         if udata.plotX == 2 || udata.plotX == 3
             scanX = udata.roiScanOutput.scanResult.roimap(:,udata.plotX-1);
         elseif udata.plotX == 11 || udata.plotX == 12
             scanX = udata.roiScanOutput.scanResult.roimap(:,udata.plotX-8);
         end
     elseif udata.params.Geometry == 2
        scanX = udata.roiScanOutput.scanResult.roimap(:,udata.plotX-1);
     end
     plot(scanX,udata.roiScanOutput.scanResult.I,'bo-');
    xlabel_str = {['q (',char(197),'^{-1})'],'\phi (deg)',...
        ['q_z (',char(197),'^{-1})'],['q_x (',char(197),'^{-1})'],...
        ['q_y (',char(197),'^{-1})'],['q_r (',char(197),'^{-1})'],...
        '2\theta (deg)','\alpha_f (deg)','\chi (deg)',...
        'x pixel','y pixel'};    
    xlabel(xlabel_str(udata.plotX-1));
end
ylabel('Intensity');


function roiscan_PushbuttonCopy2WSFcn(~,~)
udata = get(gcbf,'UserData');
if isempty(udata.roiScanOutput),return;end
[~,filename_template,~] = fileparts(udata.imFileName{1});
assignin('base',[filename_template,'_roiScanOutput'],udata.roiScanOutput);

function roiscan_PushbuttonExport2FileFcn(~,~)
udata = get(gcbf,'UserData');
if isempty(udata.roiScanOutput),return;end
[~,filename_template,~] = fileparts(udata.imFileName{1});
uiputfile_str = {...
    '*.mat','MAT-files (*.mat)';...
    '*.dat','ASCII files (*.dat)';...
    '*.txt','ASCII files (*.txt)'};
[filename,pathname,filterindex] = uiputfile(uiputfile_str,'Export Current Linecut As',[filename_template,'_roiScanOutput']);
if isequal(filename,0), return; end
f = fullfile(pathname,filename);
[~,~,ext] = fileparts(f);
ext_template = uiputfile_str{filterindex,1}(2:end);
if ~strcmpi(ext,ext_template), f = [f,ext_template]; end
switch filterindex
    case 1
        roiScanOutput = udata.roiScanOutput;
        save(f,'roiScanOutput');
    case {2,3}
        roiScanOutput = udata.roiScanOutput.scanResult.I;
        save(f,'roiScanOutput','-ASCII','-double','-TABS');
    otherwise
        return;
end

function roiscan_PushbuttonStartFcn(~,~)
hFigROIScan = gcbf;
udata = get(hFigROIScan,'UserData');
if isempty(udata.imFileName), return; end
% --- get data and parameters
params = copyhobj(udata.params);
const = cell(numel(udata.imFileName),1);
const(:) = {udata.constraint};
% --- start scanning
if isprop(params,udata.scanVarName)
    if length(udata.scanVarList) ~= length(udata.imFileName) || sum(isnan(udata.scanVarList)) ~= 0
        errordlg('Size of the scan variable list has to match the size of filename list.','Scan Variable Error','modal');
        return;
    end
end      
hwarndlg = warndlg('Please wait while data is being processed ...','ROI Scan Warning','modal');
try 
   scanResult = roiscan(...
       udata.imFilePath,udata.imFileName,...
       udata.scanVarName,udata.scanVarList,...
       params,const,udata.dataFlag,...
       udata.plotFlag,udata.cmaskDisplayFlag);
   delete(hwarndlg);
catch
    delete(hwarndlg);
    errordlg('Failed in ROI scan.','ROI Scan Error','modal');
    return;
end
% --- construct scanout
udata.roiScanOutput.scanResult  = scanResult;
udata.roiScanOutput.imFilePath  = udata.imFilePath;
udata.roiScanOutput.imFileNamee = udata.imFileName;
udata.roiScanOutput.constraint  =  udata.constraint;
udata.roiScanOutput.scanVarName = udata.scanVarName;
udata.roiScanOutput.scanVarList = udata.scanVarList;
udata.roiScanOutput.dataFlag = udata.dataFlag; 
set(hFigROIScan,'UserData',udata);
roiscan_PushbuttonPlotScanFcn;

function roiscan_CMenuSelectImageFiles(~,~)
hFigROIScan = gcbf;
udata = get(hFigROIScan,'UserData');
oldpath = pwd;
if ~isempty(udata.imFilePath), cd(udata.imFilePath); end
[filename,pathname] = uigetfile(...
    {'*.tif;*.tiff;','TIF and TIFF Files (*.tif,*.tiff)';
    '*.mat','MAT-files (*.mat)';
    '*.cbf','Crystallographic Binary Files (*.cbf)';
    '*.fits','Flexible Image Transport System (*.fits)'},...
    'Select Image Files','MultiSelect', 'on');
cd(oldpath);
if isequal(filename,0), return; end
udata.imFilePath = pathname;
if ischar(filename),
    udata.imFileName = {filename};
else
    udata.imFileName = filename';
end
set(hFigROIScan,'UserData',udata);
% --- update table
hTableList = findall(hFigROIScan,'tag','roiscan_TableList');
data = get(hTableList,'Data');
data(:,1) = {''};
if numel(udata.imFileName) > size(data,1)
    set(hTableList,'RowName',{1:numel(udata.imFileName)});
    data(size(data,1)+1:numel(udata.imFileName),1) = {''};
    data(size(data,1)+1:numel(udata.imFileName),2) = {[]};
end
data(1:numel(udata.imFileName),1) = udata.imFileName;
set(hTableList,'Data',data);
updateFcn;

function roiscan_CMenuScanVar(~,~)
hFigROIScan = findall(0,'Tag','roiscan_fig');
hTableList = findall(hFigROIScan,'tag','roiscan_TableList');
switch get(gcbo,'tag')
    case 'roiscan_CMenuScanVarUserDefined'
        set(hTableList,'ColumnName', {'File Name','UserDefined'});
    case 'roiscan_CMenuScanVarIncidentAngle'
        set(hTableList,'ColumnName', {'File Name','IncidentAngle'});
end
updateFcn;

function roiscan_CMenuCBKCopyPasteDelete(hObject,~)
hFigROIScan = findall(0,'Tag','roiscan_fig');
hTableList = findall(hFigROIScan,'tag','roiscan_TableList');
data = get(hTableList,'Data');
indices = get(hTableList,'UserData');
if isempty(indices), 
    errordlg('Need to select at least one cell.','Cell Selection Error','modal');
    return; 
end
switch get(hObject,'tag')
    case 'roiscan_CMenuCopy'
        if size(indices,1)>1 && (sum(diff(indices(:,2)))~=0 || sum(diff(indices(:,1))-1) ~=0), 
            errordlg('Only one column can be copied each time.','Cell Copy Error','modal');            
            return; 
        end
        data_copied = data(:,indices(1,2));
        data_copied = data_copied(indices(:,1));
        copy_clipboard(data_copied);
    case 'roiscan_CMenuPaste'
        hwarndlg = warndlg('Please wait while data is being pasted ...','Data Paste Warning','modal');
        try
            data_paste = paste_clipboard;
            delete(hwarndlg);
        catch
            delete(hwarndlg);
            errordlg('Invalid data format to paste.','Cell Paste Error','modal');
            return;
        end
        if ischar(data_paste)
            if  indices(2) == 1
                data{indices(1),indices(2)} = data_paste;
            else
                errordlg('Invalid data format to paste.','Cell Paste Error','modal');
                return;                
            end
        else
            if size(data_paste,2) ~=1
                errordlg('Only one column can be pasted each time.','Cell Paste Error','modal');            
                return;
            end
            if (indices(1,1)+size(data_paste,1)-1) > size(data,1)
                data(size(data,1)+1:indices(1,1)+size(data_paste,1)-1,1) = {''};
                data(size(data,1)+1:indices(1,1)+size(data_paste,1)-1,2) = {[]};
            end
            if iscell(data_paste) && indices(1,2) == 1
                data(indices(1,1):indices(1,1)+size(data_paste,1)-1,indices(1,2)) = data_paste;
            elseif isnumeric(data_paste) && indices(1,2) == 2
                data_paste = num2cell(data_paste);
                data(indices(1,1):indices(1,1)+size(data_paste,1)-1,indices(1,2)) = data_paste;
            else
                errordlg('Invalid data format to paste.','Cell Paste Error','modal');                
                return;
            end
            
        end
    case 'roiscan_CMenuDelete'
        data(indices(indices(:,2)==1,1),1) = {''};
        data(indices(indices(:,2)==2,1),2) = {[]};        
end
set(hTableList,...
    'Data',data,...
    'RowName',{1:size(data,1)});
updateFcn;

function roiscan_TableList_CellEditCallback(hObject, eventdata)
updateFcn;
%hTableList = hObject;

function roiscan_TableList_CellSelectionCallback(~,eventdata)
hTableList = gcbo;
set(hTableList,'UserData',eventdata.Indices);

function updateFcn(~,~)
hFigROIScan = findall(0,'Tag','roiscan_fig');
hTableList = findall(hFigROIScan,'tag','roiscan_TableList');
udata = get(hFigROIScan,'UserData');
% get constraints #1-#4
for ii=1:4
    hop = findall(hFigROIScan,'tag',['roiscan_PopupmenuLinecutConstraintOperator',num2str(ii)]);
    udata.constraint(ii,1) = get(hop,'value');
    udata.constraint(ii,2) = get(findall(hFigROIScan,'tag',['roiscan_PopupmenuLinecutConstraint',num2str(ii)]),'value');
    hlower = findall(hFigROIScan,'tag',['roiscan_EditLinecutConstraintLower',num2str(ii)]);
    hupper = findall(hFigROIScan,'tag',['roiscan_EditLinecutConstraintUpper',num2str(ii)]);
    if udata.constraint(ii,2) == 12
        udata.constraint(ii,1) = 1;
        udata.constraint(ii,3) = NaN;
        udata.constraint(ii,4) = NaN;
        set(hop,'value',1);
        set(hlower,'string','NaN');
        set(hupper,'string','NaN');
    else
        clower = str2double(get(hlower,'string'));
        cupper = str2double(get(hupper,'string'));
        udata.constraint(ii,3) = clower;
        udata.constraint(ii,4) = cupper;
        set(hlower,'string',num2str(clower));
        set(hupper,'string',num2str(cupper));
    end
end
set(hFigROIScan,'UserData',udata);
% get table data
data = get(hTableList,'Data');
udata.imFileName = {}; 
udata.scanVarList = []; 
for ii=1:size(data,1)
    if ~isempty(data{ii,1})
        udata.imFileName =[udata.imFileName;data{ii,1}];
        if isempty(data{ii,2})
            udata.scanVarList = [udata.scanVarList;NaN];
        else
            udata.scanVarList = [udata.scanVarList;data{ii,2}];
        end
    end
end
colName = get(hTableList,'ColumnName');
udata.scanVarName = colName{2};
% get plot settings
hPopupmenuPlotDuringScan = findall(hFigROIScan,'tag','roiscan_PopupmenuPlotDuringScan');
hPopupmenuDisplayROI = findall(hFigROIScan,'tag','roiscan_PopupmenuDisplayROI');
if get(hPopupmenuPlotDuringScan,'value') == 1
    udata.plotFlag = 1;
    set(hPopupmenuDisplayROI,'Enable','on');
    if get(hPopupmenuDisplayROI,'value') == 1
        udata.cmaskDisplayFlag= 1;    
    else
        udata.cmaskDisplayFlag= 0; 
    end
else
    udata.plotFlag = 0;
    set(hPopupmenuDisplayROI,'Enable','off');    
end
% --- get plot x
hPopupmenuPlotX = findall(hFigROIScan,'tag','roiscan_PopupmenuPlotX');
plotX = get(hPopupmenuPlotX,'value');
if isempty(udata.params) || (udata.params.Geometry == 1 && any(plotX==[4:10]))
    plotX = 1;
    set(hPopupmenuPlotX,'value',plotX);
end
udata.plotX = plotX;
set(hFigROIScan,'UserData',udata);

function roiscan_PushbuttonLoadParamsFcn(~,~)
hFigROIScan = findall(0,'Tag','roiscan_fig');
udata = get(hFigROIScan,'UserData');
hFigGIXS = findall(0,'Tag','gixs_fig');
if strcmpi(get(gcbo,'tag'),'roiscan_PushbuttonParamFromDefault')
    if ~isempty(hFigGIXS)
        udata_gixsgui = get(hFigGIXS,'UserData');        
        udata.params = copyhobj(udata_gixsgui.paramsDefault);
        text_str = 'Parameters loaded from GIXSGUI default';
        tooltipstring = text_str;
    else
        text_str = 'Loading failed. GIXSGUI is not active.';
        tooltipstring = text_str;
    end
elseif strcmpi(get(gcbo,'tag'),'roiscan_PushbuttonParamFromFile')
    oldpath = pwd;    
    if ~isempty(hFigGIXS)
        udata_gixsgui = get(hFigGIXS,'UserData');        
        if ~isempty(udata_gixsgui.path), cd(udata_gixsgui.path); end
    end
    [filename,pathname] = uigetfile({'*.mat','MAT-files (*.mat)';'*.*','All files (*.*)'},'Load Parameter File');
    cd(oldpath);
    if isequal(filename,0), return; end
    f = fullfile(pathname, filename);
    [~,~,ext] = fileparts(f);
    if strcmpi(ext,'.mat')
        p = load(f);
        if ~isstruct(p), return; end;
        tmp = fieldnames(p); p = p.(tmp{1});
        if ~strcmpi(class(p),'gixsdata'),return; end
        udata.params = copyhobj(p);
        text_str = filename;
        tooltipstring = f;
    else
        return;
    end
else
    return
end
%udata.params.qmaps_initialize(udata.params);
set(hFigROIScan,'UserData',udata);
set(findall(hFigROIScan,'tag','roiscan_TextParam'),'string',text_str,'TooltipString',tooltipstring);
updateFcn;
